// Code generated by Kitex v0.11.0. DO NOT EDIT.
package streamserver

import (
	"context"

	echo "github.com/cloudwego/kitex-benchmark/codec/thrift/kitex_gen/echo"
	"github.com/cloudwego/kitex/pkg/streamx"
	"github.com/cloudwego/kitex/pkg/streamx/provider/ttstream"
	server "github.com/cloudwego/kitex/server"
	"github.com/cloudwego/kitex/server/streamxserver"
)

type Server interface {
	Echo(ctx context.Context, stream streamx.BidiStreamingServer[echo.Request, echo.Response]) error
}

func RegisterService(svr server.Server, handler Server, opts ...server.RegisterOption) error {
	return svr.RegisterService(ServiceInfo, handler, opts...)
}

func NewServer(handler Server, opts ...server.Option) server.Server {
	var options []server.Option

	sp, _ := ttstream.NewServerProvider(ServiceInfo)
	options = append(options, streamxserver.WithProvider(sp))

	options = append(options, opts...)
	options = append(options, server.WithCompatibleMiddlewareForUnary())

	svr := server.NewServer(options...)
	if err := svr.RegisterService(ServiceInfo, handler); err != nil {
		panic(err)
	}
	return svr
}
